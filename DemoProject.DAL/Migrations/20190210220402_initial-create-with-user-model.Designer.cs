// <auto-generated />
using System;
using DemoProject.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemoProject.DAL.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20190210220402_initial-create-with-user-model")]
    partial class initialcreatewithusermodel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DemoProject.DAL.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DemoProject.DAL.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfCreation");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("DemoProject.DAL.Models.CartShopItem", b =>
                {
                    b.Property<Guid>("CartId");

                    b.Property<Guid>("ShopItemDetailId");

                    b.Property<int>("Count");

                    b.Property<decimal>("Price");

                    b.HasKey("CartId", "ShopItemDetailId");

                    b.HasIndex("ShopItemDetailId");

                    b.ToTable("CartShopItems");
                });

            modelBuilder.Entity("DemoProject.DAL.Models.ChangeHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TableName")
                        .IsRequired();

                    b.Property<DateTime>("TimeOfChange");

                    b.HasKey("Id");

                    b.ToTable("History");
                });

            modelBuilder.Entity("DemoProject.DAL.Models.ContentGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GroupName");

                    b.Property<int>("Order");

                    b.Property<string>("Title")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ContentGroups");
                });

            modelBuilder.Entity("DemoProject.DAL.Models.InfoObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<Guid>("ContentGroupId");

                    b.Property<int>("SubOrder");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ContentGroupId");

                    b.ToTable("InfoObjects");
                });

            modelBuilder.Entity("DemoProject.DAL.Models.MenuItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IconPath")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Order");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Text")
                        .IsUnique();

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("DemoProject.DAL.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<Guid>("CartId");

                    b.Property<string>("Comment");

                    b.Property<DateTime?>("DateOfApproved");

                    b.Property<DateTime?>("DateOfClosed");

                    b.Property<DateTime>("DateOfCreation");

                    b.Property<DateTime?>("DateOfRejected");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DemoProject.DAL.Models.ShopItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<Guid>("MenuItemId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("DemoProject.DAL.Models.ShopItemDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("Price");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("ShopItemId");

                    b.Property<int>("SubOrder");

                    b.HasKey("Id");

                    b.HasIndex("ShopItemId");

                    b.ToTable("ShopItemDetails");
                });

            modelBuilder.Entity("DemoProject.DAL.Models.CartShopItem", b =>
                {
                    b.HasOne("DemoProject.DAL.Models.Cart", "Cart")
                        .WithMany("CartShopItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DemoProject.DAL.Models.ShopItemDetail", "ShopItemDetail")
                        .WithMany("CartShopItems")
                        .HasForeignKey("ShopItemDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoProject.DAL.Models.InfoObject", b =>
                {
                    b.HasOne("DemoProject.DAL.Models.ContentGroup", "ContentGroup")
                        .WithMany("Items")
                        .HasForeignKey("ContentGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoProject.DAL.Models.Order", b =>
                {
                    b.HasOne("DemoProject.DAL.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoProject.DAL.Models.ShopItem", b =>
                {
                    b.HasOne("DemoProject.DAL.Models.MenuItem", "MenuItem")
                        .WithMany("Items")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoProject.DAL.Models.ShopItemDetail", b =>
                {
                    b.HasOne("DemoProject.DAL.Models.ShopItem", "ShopItem")
                        .WithMany("Details")
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
